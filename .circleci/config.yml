# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2

jobs:
  build_rails6.0:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_GEMFILE: Gemfile-rails6.0
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Install bundler"
         command: |
           gem uninstall bundler
           gem install bundler -v 2.1.2

      # Download and cache dependencies
      - restore_cache:
          keys:
            - ruby-2.6.5-rails6.0-dependencies-{{ checksum "Gemfile-rails6.0.lock" }}
            # fallback to using the latest cache if no exact match is found
            - ruby-2.6.5-rails6.0-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle -v
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: ruby-2.6.5-rails6.0-dependencies-{{ checksum "Gemfile-rails6.0.lock" }}

      # Database setup
      - run: bin/rake db:create db:migrate

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bin/rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  build_rails5.2:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_GEMFILE: Gemfile-rails4.2
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Install bundler"
         command: |
           gem uninstall bundler
           gem install bundler -v 1.17.2

      # Download and cache dependencies
      - restore_cache:
          keys:
            - ruby-2.6.5-rails5.2-dependencies-{{ checksum "Gemfile-rails5.2.lock" }}
            # fallback to using the latest cache if no exact match is found
            - ruby-2.6.5-rails5.2-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: ruby-2.6.5-rails5.2-dependencies-{{ checksum "Gemfile-rails5.2.lock" }}

      # Database setup
      - run: bin/rake db:create db:migrate

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bin/rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  build_rails4.2:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_GEMFILE: Gemfile-rails4.2
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Install bundler"
         command: |
           gem uninstall bundler
           gem install bundler -v 1.17.2

      # Download and cache dependencies
      - restore_cache:
          keys:
            - ruby-2.6.5-rails4.2-dependencies-{{ checksum "Gemfile-rails4.2.lock" }}
            # fallback to using the latest cache if no exact match is found
            - ruby-2.6.5-rails4.2-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: ruby-2.6.5-rails4.2-dependencies-{{ checksum "Gemfile-rails4.2.lock" }}

      # Database setup
      - run: bin/rake db:create db:migrate

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bin/rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  build_rails3.2:
    docker:
      - image: circleci/ruby:2.3.7-node
        environment:
          BUNDLE_GEMFILE: Gemfile-rails3.2
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Install bundler"
         command: |
           gem uninstall -i /usr/local/lib/ruby/gems/2.3.0 bundler
           gem install bundler -v 1.17.2

      # Download and cache dependencies
      - restore_cache:
          keys:
            - ruby-2.3.7-rails3.2-dependencies-{{ checksum "Gemfile-rails3.2.lock" }}
            # fallback to using the latest cache if no exact match is found
            - ruby-2.3.7-rails3.2-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: ruby-2.6.5-rails3.2-dependencies-{{ checksum "Gemfile-rails3.2.lock" }}

      # Database setup
      - run: bin/rake db:create db:migrate

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bin/rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  all_versions:
    jobs:
      - build_rails6.0
      - build_rails5.2
      - build_rails4.2
      - build_rails3.2
